{  
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "McAfee Network Security Platform AWS Solution Deployment",
  "Metadata": {
	"Comment" : "Author: Vivek Stalin (vivek_stalin@mcafee.com). Copyright (c) 2017 McAfee Inc. - All Rights Reserved",
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configurations"
          },
          "Parameters": [
      			"VPCCIDR",
      			"PublicSubnetCIDR",
      			"PrivateSubnetCIDR",
				"ProtectedSubnetCIDR"
          ]
        },	
        {
          "Label": {
            "default": "McAfee NSP Controller Settings"
          },
          "Parameters": [
      		  "ControllerSharedSecretKey",
              "ControllerCloudAccessKey",
              "ControllerCloudSecretKey",
			  "OverlayNetworkSubnet"
      		  ]
        },
    		{
    		"Label": {
                "default": "McAfee NSP Manager Settings"
              },
              "Parameters": [
			      "NSMSGSettings", 
          		  "ClusterName",
				  "ClusterSecret"
          		  ]
        },
		{
    		"Label": {
                "default": "Instance SSH Settings"
              },
              "Parameters": [
          		  "KeyName"
          		  ]
        }
      ],
      "ParameterLabels": { 
  		  "VPCCIDR": {
            "default": "Service VPC"
          },
  		  "PublicSubnetCIDR": {
            "default": "Service Management Subnet"
          },
  		  "PrivateSubnetCIDR": {
            "default": "Service Data Subnet"
          },
		  "ProtectedSubnetCIDR": {
            "default": "Protected Subnet"
          },
  		  "ControllerSharedSecretKey": {
            "default": "Controller-Manager Shared Secret Key"
          },
        "ControllerCloudAccessKey": {
            "default": "Cloud Access Key"
          },
        "ControllerCloudSecretKey": {
            "default": "Cloud Secret Key"
          },
		 "OverlayNetworkSubnet" : {
            "default": "Controller Private Communication Subnet"
          },
		  "NSMSGSettings": {
            "default": "Security Group Settings"
          },
  		  "ClusterName": {
            "default": "ClusterName"
          },
		  "ClusterSecret": {
            "default": "ClusterSecret"
          },
		  "KeyName":{
		   "default": "Key Name"
		 }
        }
	 }
  },	
  
  "Parameters": {
   
	  "VPCCIDR": {
      "Description": "IPv4 CIDR for VPC. Default:10.30.0.0/16",
      "Type": "String",
      "Default": "10.30.0.0/16",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
	  "PublicSubnetCIDR": {
      "Description": "IPv4 CIDR for Management Subnet. Default:10.30.10.0/24",
      "Type": "String",
      "Default": "10.30.10.0/24",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
	  "PrivateSubnetCIDR": {
      "Description": "IPv4 CIDR for Data Subnet. Default:10.30.20.0/24",
      "Type": "String",
      "Default": "10.30.20.0/24",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
	 "ProtectedSubnetCIDR": {
      "Description": "IPv4 CIDR for Protected Subnet. Default:10.30.30.0/24",
      "Type": "String",
      "Default": "10.30.30.0/24",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
	  "ControllerSharedSecretKey": {
      "Description": "Shared key used for Controller-Manager registration",
      "Type": "String",
      "MinLength": "3",
	  "NoEcho" : "true" 
    },
    "ControllerCloudAccessKey": {
      "Description": "Your AWS Access Key",
      "Type": "String",
      "MinLength": "3",
	  "NoEcho" : "true"
    },
    "ControllerCloudSecretKey": {
      "Description": "Your AWS Secret Key",
      "Type": "String",
      "MinLength": "3",
      "NoEcho" : "true"
    },
	
	"OverlayNetworkSubnet": {
      "Description": "Controller internal communication subnet. Default:169.254.0.0/17",
      "Type": "String",
      "Default": "169.254.0.0/17",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
	"NSMSGSettings": {
      "Description": "NSP Manager Security Group - Allowed Inbound Source Address Range for RDP and HTTPS access (Default 0.0.0.0/0)",
      "Type": "String",
	  "Default" : "0.0.0.0/0",
	  "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
	  "ConstraintDescription": "Must be valid IPv4 CIDR notation: X.X.X.X/X"
    },
	"ClusterName": {
      "Description": "Name of the Cluster to be configured in the manager. (Max 30 chars)",
      "Type": "String",
      "MinLength": "3",
	  "MaxLength" : "30"
    },
	"ClusterSecret": {
      "Description": "Secret key for Manager-Sensor trust (Min 8 chars and Max 25 chars)",
      "Type": "String",
      "MinLength": "8",
	  "MaxLength" : "25",
	  "NoEcho" : "true"
    },
	"KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the Sensor Instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    }
  },


"Mappings" : {
    "TemplateMap" : {  
	
	"ap-northeast-1": {
		"NSMAMI": "ami-fbce2c9d",
		"ControllerAMI" : "ami-b5e71cd3",
        "SensorAMI": "ami-b78c96d0"
        },
	"ap-south-1": {
		"NSMAMI": "ami-52dfa73d",
		"ControllerAMI" : "ami-777c3818",
        "SensorAMI": "ami-2188f14e"
        },	
	"ap-southeast-1": {
		"NSMAMI": "ami-a00a98c3",
		"ControllerAMI" : "ami-102e4373",
        "SensorAMI": "ami-3bdb4d58"
        },
	"ap-southeast-2": {
		"NSMAMI": "ami-f1f9e692",
		"ControllerAMI" : "ami-71f51013",
        "SensorAMI": "ami-4aa8b529"
        },	
    "us-west-1": {
		"NSMAMI": "ami-89644ce9",
		"ControllerAMI" : "ami-a30236c3",
        "SensorAMI": "ami-a7f4dac7"
        },
    "us-west-2": {
		"NSMAMI": "ami-5423392d",
		"ControllerAMI" : "ami-d62fc5ae",
        "SensorAMI": "ami-28405f51"
        },
    "us-east-1": {
		"NSMAMI": "ami-06005c7d",
        "ControllerAMI" : "ami-b64b40cd",
        "SensorAMI": "ami-6ff8f079"
        },	
    "us-east-2": {
		"NSMAMI": "ami-092c0c6c",
		"ControllerAMI" : "ami-e983a08c",
        "SensorAMI": "ami-5284a537"
        }	
    }
  },
  
  "Resources" : {

    "DemoVPC" : {
       "Type" : "AWS::EC2::VPC",
	     "Properties": {
  	     "CidrBlock" : { "Ref" : "VPCCIDR"},
  		   "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{"Ref" : "AWS::StackName"},"VPC"]]}}],
  		   "EnableDnsSupport": "true",
          "EnableDnsHostnames": "true"
		   }
      },
	   
	"DemoPublicSubnet": {
       "Type": "AWS::EC2::Subnet",
	   "DependsOn": "DemoVPC",
       "Properties" : {
         "CidrBlock" : {"Ref":"PublicSubnetCIDR"},
		 "AvailabilityZone" : {"Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]},
		 "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{"Ref" : "AWS::StackName"},"PublicSubnet"]]}}],
          "VpcId": {
              "Ref": "DemoVPC"
           }
        }
      },
		
    "DemoPrivateSubnet": {
       "Type": "AWS::EC2::Subnet",
	   "DependsOn": "DemoVPC",
       "Properties" : {
         "CidrBlock" : {"Ref":"PrivateSubnetCIDR"},
		 "AvailabilityZone" : {"Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]},
		 "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{"Ref" : "AWS::StackName"},"PrivateSubnet"]]}}],
          "VpcId": {
              "Ref": "DemoVPC"
            }
        }
      },
		
	"DemoProtectedSubnet": {
       "Type": "AWS::EC2::Subnet",
	   "DependsOn": "DemoVPC",
       "Properties" : {
         "CidrBlock" : {"Ref":"ProtectedSubnetCIDR"},
		 "AvailabilityZone" : {"Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]},
		  "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"ProtectedSubnet"]]}} ],
         "VpcId": {
          "Ref": "DemoVPC"
            }
        }
      }, 
	   
	"DemoInternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
      "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"IntGW"]]}} ]
      }
      },

    "DemoAttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "DemoVPC" },
         "InternetGatewayId" : { "Ref" : "DemoInternetGateway" }		
       }
      },
	
    "DemoPublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "DemoVPC"},
          "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"PublicRouteTable"]]}} ]
       }
      },

  	"DemoPublicRoute" : {
        "Type" : "AWS::EC2::Route",
        "DependsOn" : "DemoAttachGateway",
        "Properties" : {
          "RouteTableId" : { "Ref" : "DemoPublicRouteTable" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref" : "DemoInternetGateway" }
        }
      },
	
  	"DemoPublicSubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "DemoPublicSubnet"
          },
          "RouteTableId": {
            "Ref": "DemoPublicRouteTable"
          }
        }
      },
	
  	"DemoPrivateSubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "DemoPrivateSubnet"
          },
          "RouteTableId": {
            "Ref": "DemoPublicRouteTable"
          }
        }
    },
	"DemoProtectedSubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "DemoProtectedSubnet"
          },
          "RouteTableId": {
            "Ref": "DemoPublicRouteTable"
          }
        }
      },
	  
	"DemoSecurityGroupManager" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "McAfee NSP AWS Solution- NSP Manager Security Group",
    	"Tags" : [ {"Key" : "Name", "Value" :"McAfeevNSPTestDriveManager"} ],
        "VpcId" : 
        	  {"Ref" : "DemoVPC"
        	  },
		"SecurityGroupIngress" : [
                {
      			"IpProtocol" : "tcp",
      			"FromPort" : "3389",
      			"ToPort" : "3389",
                  "CidrIp" : {"Ref" : "NSMSGSettings"}
      			},
      			{
      			"IpProtocol" : "tcp",
      			"FromPort" : "443",
      			"ToPort" : "443",
                "CidrIp" : {"Ref" : "NSMSGSettings"}
      			}
				]
	  }
	},
      


    "DemoSecurityGroupController" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "McAfee NSP AWS Solution- NSP Controller Security Group",
    	"Tags" : [ {"Key" : "Name", "Value" :"McAfeevNSPTestDriveController"} ],
        "VpcId" : 
        	  {"Ref" : "DemoVPC"
        	  }
        }
      },
	
	
	"DemoSecurityGroupTestVMGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "McAfee NSP AWS Solution- Test VM Group Security Group",
    	"Tags" : [ {"Key" : "Name", "Value" :"McAfeevNSPTestDriveTestVM"} ],
        "VpcId" : 
        	  {"Ref" : "DemoVPC"
        	  }
        }
      },
	  
	  
	"DemoSecurityGroupSensorMgmt" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "McAfee NSP AWS Solution- NSP Sensor Management Suubnet Security Group",
    	"Tags" : [ {"Key" : "Name", "Value" :"McAfeevNSPTestDriveSensorMgmt"} ],
        "VpcId" : 
        	  {"Ref" : "DemoVPC"
        	  }
        }
      },

	  
    "DemoSecurityGroupSensorData" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "McAfee NSP AWS Solution- NSP Sensor Data Sunbent Security Group",
    	"Tags" : [ {"Key" : "Name", "Value" :"McAfeevNSPTestDriveSensorData"} ],
        "VpcId" : 
        	  {"Ref" : "DemoVPC"
        	  }
        }
      },
    
	
	"ManagerSGroup1Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "8504",
             "FromPort" : "8501",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
         },
	
    "ManagerSGroup2Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "8509",
             "FromPort" : "8506",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
           },	
		 
		 
    "ManagerSGroup3Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
         },
    		 
	"ManagerSGroup4Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
         },
    "ManagerSGroup5Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         }, 
    		 					 
	
	"ControllerSGroup1Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },
	
	"ControllerSGroup2Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },
		 
	"ControllerSGroup3Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
         },
		 
	"ControllerSGroup4Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },
	"ControllerSGroup5Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "3306",
             "FromPort" : "3306",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
         },	 
    "SensorMgmtSGroup1Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },
		 

    "SensorMgmtSGroup2Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "udp",
             "ToPort" : "8500",
             "FromPort" : "8500",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },

	"SensorMgmtSGroup3Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
         },
		 
	"SensorMgmtSGroup4Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },
		 
	 "SensorMgmtSGroup5Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 
		 		 
	"SensorMgmtSGroup6Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 	 

	"SensorDataSGroup1Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "9797",
             "FromPort" : "9797",
             "GroupId": {"Ref": "DemoSecurityGroupSensorData"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },
		 
	"TestVMSGroup1Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "80",
             "FromPort" : "80",
             "GroupId": {"Ref": "DemoSecurityGroupTestVMGroup"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 
	
	"TestVMSGroup2Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupTestVMGroup"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 
		 
    "TestVMSGroup3Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupTestVMGroup"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 
    "TestVMSGroup4Ingress" : {
         "Type" : "AWS::EC2::SecurityGroupIngress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "3306",
             "FromPort" : "3306",
             "GroupId": {"Ref": "DemoSecurityGroupTestVMGroup"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },	 		 		 
	
    
    "ManagerSGroup1Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "udp",
             "ToPort" : "8500",
             "FromPort" : "8500",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
         },	
    "ManagerSGroup2Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
         },	
	"ManagerSGroup3Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
	      },
			 
	"ManagerSGroup4Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			 "CidrIp" : "0.0.0.0/0"
			 }
         },
	"ManagerSGroup5Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "80",
             "FromPort" : "80",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			"SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },	 
	"ManagerSGroup6Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			"SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },	 
	"ManagerSGroup7Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			"SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
         },	 
    "ManagerSGroup8Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "22",
             "FromPort" : "22",
             "GroupId": {"Ref": "DemoSecurityGroupManager"},
			"SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupTestVMGroup" }
			 }
         },	 		 
	"ControllerSGroup1Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupSensorMgmt" }
			 }
         },
    "ControllerSGroup2Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	
	
    "ControllerSGroup3Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "3306",
             "FromPort" : "3306",
             "GroupId": {"Ref": "DemoSecurityGroupController"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
         },	
    	 
	"SensorMgmtSGroup1Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "8504",
             "FromPort" : "8501",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 
    "SensorMgmtSGroup2Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "8509",
             "FromPort" : "8506",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },	 
    "SensorMgmtSGroup3Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupController" }
			 }
         },	 
	"SensorMgmtSGroup4Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "SourceSecurityGroupId":{ "Ref": "DemoSecurityGroupManager" }
			 }
         },
    "SensorMgmtSGroup5Egress" : {
         "Type" : "AWS::EC2::SecurityGroupEgress",
         "Properties" : {
             "IpProtocol" : "tcp",
             "ToPort" : "443",
             "FromPort" : "443",
             "GroupId": {"Ref": "DemoSecurityGroupSensorMgmt"},
			 "CidrIp" : "0.0.0.0/0"
			 }
         },
		 
	"DemoNSMInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "C:/Users/Administrator/Desktop/DemoFiles/demodata.txt" : {
                "content" : { "Fn::Join" : ["", [
                  "CONTROLLER_NAME=",{"Ref" : "AWS::StackName"},"Controller", "\n",
                  "CONTROLLER_SECRET=",{"Ref":"ControllerSharedSecretKey"}, "\n",
                  "CONTROLLER_SUBNET=",{"Ref" : "OverlayNetworkSubnet"}, "\n",
                  "CONTROLLER_CLOUD_REGION=", { "Ref" : "AWS::Region" }, "\n",
                  "CONTROLLER_CLOUD_ACCESSKEY=", {"Ref":"ControllerCloudAccessKey"}, "\n",
                  "CONTROLLER_CLOUD_SECRET=", {"Ref":"ControllerCloudSecretKey"}, "\n",
                  "CLUSTER_NAME=", {"Ref":"ClusterName"}, "\n",
                  "CLUSTER_SECRET=", {"Ref":"ClusterSecret"} , "\n",
                  "STACK_NAME=", { "Ref" : "AWS::StackName" }, "\n",
                  "RESOURCE=", "DemoNSMInstance", "\n",
                  "REGION=", { "Ref" : "AWS::Region" }, "\n",
                  "CONTROLLER_WAIT_HANDLE=", { "Fn::Base64" : { "Ref" : "ControllerCreationWaitHandle" }}, "\n",
                  "CLUSTER_WAIT_HANDLE=", { "Fn::Base64" : { "Ref" : "ClusterCreationWaitHandle" }}, "\n"
                  ]]}
              }
            }
          }
        }
      },
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "TemplateMap", { "Ref" : "AWS::Region" }, "NSMAMI" ]},
        "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"Manager"]]}} ],
    		"InstanceType" : "m4.xlarge",
    		"EbsOptimized" : "true",
    		"NetworkInterfaces": [ {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
    		"GroupSet": [{ "Ref" : "DemoSecurityGroupManager" }],
            "SubnetId": { "Ref" : "DemoPublicSubnet" }
            } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "<script>\n",

           "cfn-init.exe -s ", { "Ref" : "AWS::StackName" },
          " -r DemoNSMInstance",
          " --region ", { "Ref" : "AWS::Region" }, "\n",
          "call C:\\Users\\Administrator\\Desktop\\DemoFiles\\testdrive.bat", "\n",

          "</script>"
          ]]}}
       }
    },

   "ControllerCreationWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

   "ControllerCreationWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "DemoNSMInstance",
      "Properties" : {
        "Handle" : {"Ref" : "ControllerCreationWaitHandle"},
        "Timeout" : "1800"
      }
    },

   "DemoControllerInstance" : {
      "Type" : "AWS::EC2::Instance",
	  "DependsOn" : "ControllerCreationWaitCondition",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "TemplateMap", { "Ref" : "AWS::Region" }, "ControllerAMI" ]},
        "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"Controller"]]}} ],
    		"InstanceType" : "c4.xlarge",
    		"EbsOptimized" : "true",
    		"NetworkInterfaces": [ {
            "AssociatePublicIpAddress": "false",
            "DeviceIndex": "0",
  		    "GroupSet": [{ "Ref" : "DemoSecurityGroupController" }],
            "SubnetId": { "Ref" : "DemoPublicSubnet" }}],
    		"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
    		"{",
    		"\"Primary NSM IP\"",":","\"",{ "Fn::GetAtt": ["DemoNSMInstance", "PrivateIp"]},"\"",","," ",
    		"\"Secondary NSM IP\"",":","\" \"",","," ",
    		"\"Controller Name\"",":","\"",{"Ref" : "AWS::StackName"},"Controller","\"",","," ",
    		"\"Controller EIP\"",":","\"","\"",","," ",
    		"\"Controller Shared Key\"",":","\"",{"Ref":"ControllerSharedSecretKey"},"\"",
    		"}"
    		]]}}
       }
    },

   "ClusterCreationWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

   "ClusterCreationWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "DemoNSMInstance",
      "Properties" : {
        "Handle" : {"Ref" : "ClusterCreationWaitHandle"},
        "Timeout" : "1500"
      }
    },
	
	"DemoSensorInstance" : {
      "Type" : "AWS::EC2::Instance",
	  "DependsOn" : "ClusterCreationWaitCondition",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "TemplateMap", { "Ref" : "AWS::Region" }, "SensorAMI" ]},
        "Tags" : [ {"Key" : "Name", "Value" :{ "Fn::Join" : ["",[{ "Ref" : "AWS::StackName" },"Sensor"]]}} ],
    		"InstanceType" : "c4.xlarge",
    		"NetworkInterfaces": [ 
      		{
              "DeviceIndex": "0",
      		  "GroupSet": [{ "Ref" : "DemoSecurityGroupSensorMgmt" }],
              "SubnetId": { "Ref" : "DemoPrivateSubnet" }
          },
      		{
              "DeviceIndex": "1",
      		  "GroupSet": [{ "Ref" : "DemoSecurityGroupSensorData" }],
              "SubnetId": { "Ref" : "DemoProtectedSubnet" }
      		 }
      		],
    	"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
    		"{\n",
    		"\"","Primary NSM IP","\"",":","\"",{ "Fn::GetAtt": ["DemoNSMInstance", "PrivateIp"]},"\"",",",
			"\"","Secondary NSM IP","\"",":","\"","\"",",",
			"\"","Cluster Name","\"",":","\"",{"Ref":"ClusterName"},"\"",",",
			"\"","Sensor Shared Key","\"",":","\"",{"Ref":"ClusterSecret"},"\"","\n",
			"}"
    	    ]]}},
		"KeyName": { "Ref": "KeyName" }
       }
     }
   }
}   